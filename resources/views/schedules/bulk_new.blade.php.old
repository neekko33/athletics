<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ $competition->name }} - 批量添加日程
        </h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-2xl mx-auto sm:px-6 lg:px-8">
            <div class="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                <div class="p-6">
                    <h3 class="text-2xl font-bold mb-6">批量添加日程</h3>

                    @if(session('error'))
                        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4">
                            {{ session('error') }}
                        </div>
                    @endif

                    @if($groupedHeats->isEmpty())
                        <div class="text-center py-12">
                            <p class="text-gray-500 text-lg mb-4">没有可批量安排的项目</p>
                            <p class="text-gray-400 text-sm mb-6">所有分组都已安排时间</p>
                            <a href="{{ route('competitions.schedules.index', $competition) }}" 
                               class="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600">
                                返回日程列表
                            </a>
                        </div>
                    @else
                        <form action="{{ route('competitions.schedules.bulk-create', $competition) }}" 
                              method="POST" 
                              id="bulk-schedule-form">
                            @csrf

                            <!-- 选择比赛分组 -->
                            <div class="mb-5">
                                <label for="group_select" class="block text-sm font-medium text-gray-700 mb-2">
                                    选择比赛分组
                                </label>
                                <select name="group_select" 
                                        id="group-select" 
                                        class="w-full border-gray-300 rounded-md shadow-sm focus:border-blue-500 focus:ring-blue-500"
                                        required>
                                    <option value="">-- 请选择 --</option>
                                    @foreach($groupedHeats as $key => $group)
                                        @php
                                            $data = $group['data'];
                                            $heats = $group['heats'];
                                        @endphp
                                        <option value="{{ $data['grade_id'] }}|{{ $data['event_id'] }}|{{ $data['gender'] }}|{{ $data['avg_time'] }}"
                                                data-heats-count="{{ $heats->count() }}"
                                                data-avg-time="{{ $data['avg_time'] }}">
                                            {{ $data['grade_name'] }} - {{ $data['event_name'] }} ({{ $data['gender'] }}) - {{ $heats->count() }} 个分组
                                        </option>
                                    @endforeach
                                </select>
                                <input type="hidden" name="grade_id" id="grade_id">
                                <input type="hidden" name="event_id" id="event_id">
                                <input type="hidden" name="gender" id="gender">
                                <input type="hidden" name="avg_time" id="avg_time">
                            </div>

                            <!-- 分组预览 -->
                            <div id="heats-preview" class="mb-5 hidden">
                                <label class="block text-sm font-medium text-gray-700 mb-2">
                                    将要安排的分组
                                </label>
                                <div class="bg-gray-100 p-3 rounded max-h-48 overflow-y-auto">
                                    @foreach($groupedHeats as $key => $group)
                                        @php
                                            $data = $group['data'];
                                            $heats = $group['heats'];
                                            $groupId = "{$data['grade_id']}_{$data['event_id']}_{$data['gender']}";
                                        @endphp
                                        <div class="heats-list hidden" data-group-id="{{ $groupId }}">
                                            <div class="flex flex-wrap gap-2">
                                                @foreach($heats as $heat)
                                                    <span class="inline-block bg-white border border-gray-300 rounded px-2 py-1 text-sm">
                                                        第{{ $heat->heat_number }}组
                                                    </span>
                                                @endforeach
                                            </div>
                                        </div>
                                    @endforeach
                                </div>
                            </div>

                            <!-- 时间预览 -->
                            <div id="time-preview" class="mb-5 hidden">
                                <div class="bg-blue-50 text-blue-700 px-4 py-3 rounded text-sm">
                                    将安排 <strong id="preview-count">0</strong> 个分组，
                                    从 <strong id="preview-start"></strong> 开始，
                                    预计到 <strong id="preview-end"></strong> 结束
                                    <span class="text-xs opacity-75">(按项目平均用时 <span id="preview-avg-time"></span> 分钟自动计算)</span>
                                </div>
                            </div>

                            <!-- 开始日期 -->
                            <div class="mb-5">
                                <label for="start_date" class="block text-sm font-medium text-gray-700 mb-2">
                                    开始日期
                                </label>
                                <input type="date" 
                                       name="start_date" 
                                       id="start_date"
                                       value="{{ $competition->start_date->between($competition->start_date, $competition->end_date) && now()->between($competition->start_date, $competition->end_date) ? now()->format('Y-m-d') : $competition->start_date->format('Y-m-d') }}"
                                       min="{{ $competition->start_date->format('Y-m-d') }}"
                                       max="{{ $competition->end_date->format('Y-m-d') }}"
                                       class="w-full border-gray-300 rounded-md shadow-sm focus:border-blue-500 focus:ring-blue-500"
                                       required>
                            </div>

                            <!-- 开始时间 -->
                            <div class="mb-5">
                                <label for="start_time" class="block text-sm font-medium text-gray-700 mb-2">
                                    开始时间
                                </label>
                                <input type="time" 
                                       name="start_time" 
                                       id="start_time"
                                       value="08:00"
                                       class="w-full border-gray-300 rounded-md shadow-sm focus:border-blue-500 focus:ring-blue-500"
                                       required>
                            </div>

                            <!-- 场地 -->
                            <div class="mb-5">
                                <label for="venue" class="block text-sm font-medium text-gray-700 mb-2">
                                    场地
                                </label>
                                <input type="text" 
                                       name="venue" 
                                       id="venue"
                                       placeholder="例如：田径场"
                                       class="w-full border-gray-300 rounded-md shadow-sm focus:border-blue-500 focus:ring-blue-500">
                            </div>

                            <!-- 备注 -->
                            <div class="mb-5">
                                <label for="notes" class="block text-sm font-medium text-gray-700 mb-2">
                                    备注
                                </label>
                                <textarea name="notes" 
                                          id="notes"
                                          rows="3"
                                          placeholder="其他说明信息"
                                          class="w-full border-gray-300 rounded-md shadow-sm focus:border-blue-500 focus:ring-blue-500"></textarea>
                            </div>

                            <!-- 按钮 -->
                            <div class="flex justify-end space-x-2 mt-6">
                                <a href="{{ route('competitions.schedules.index', $competition) }}" 
                                   class="px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600">
                                    取消
                                </a>
                                <button type="submit" 
                                        class="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600">
                                    批量添加
                                </button>
                            </div>
                        </form>

                        <script>
                            function initBulkScheduleForm() {
                                const groupSelect = document.getElementById('group-select');
                                const heatsPreview = document.getElementById('heats-preview');
                                const timePreview = document.getElementById('time-preview');
                                const dateInput = document.getElementById('start_date');
                                const timeInput = document.getElementById('start_time');
                                const gradeIdInput = document.getElementById('grade_id');
                                const eventIdInput = document.getElementById('event_id');
                                const genderInput = document.getElementById('gender');
                                const avgTimeInput = document.getElementById('avg_time');
                                const form = document.getElementById('bulk-schedule-form');

                                if (!groupSelect || !form) {
                                    return;
                                }

                                function updatePreview() {
                                    const selectedOption = groupSelect.options[groupSelect.selectedIndex];
                                    
                                    if (selectedOption.value) {
                                        const [gradeId, eventId, gender, avgTime] = selectedOption.value.split('|');
                                        const heatsCount = parseInt(selectedOption.dataset.heatsCount);
                                        
                                        gradeIdInput.value = gradeId;
                                        eventIdInput.value = eventId;
                                        genderInput.value = gender;
                                        avgTimeInput.value = avgTime;
                                        
                                        heatsPreview.classList.remove('hidden');
                                        document.querySelectorAll('.heats-list').forEach(list => {
                                            list.classList.add('hidden');
                                        });
                                        const groupId = `${gradeId}_${eventId}_${gender}`;
                                        const targetList = document.querySelector(`[data-group-id="${groupId}"]`);
                                        if (targetList) {
                                            targetList.classList.remove('hidden');
                                        }
                                        
                                        updateTimePreview(heatsCount, parseInt(avgTime));
                                    } else {
                                        heatsPreview.classList.add('hidden');
                                        timePreview.classList.add('hidden');
                                        gradeIdInput.value = '';
                                        eventIdInput.value = '';
                                        genderInput.value = '';
                                        avgTimeInput.value = '';
                                    }
                                }

                                function updateTimePreview(heatsCount, avgTime) {
                                    if (!dateInput.value || !timeInput.value || !heatsCount || !avgTime) {
                                        timePreview.classList.add('hidden');
                                        return;
                                    }

                                    const startDateTime = new Date(`${dateInput.value}T${timeInput.value}`);
                                    const totalMinutes = (heatsCount - 1) * avgTime + avgTime;
                                    const endDateTime = new Date(startDateTime.getTime() + totalMinutes * 60000);

                                    document.getElementById('preview-count').textContent = heatsCount;
                                    document.getElementById('preview-start').textContent = startDateTime.toLocaleTimeString('zh-CN', { hour: '2-digit', minute: '2-digit' });
                                    document.getElementById('preview-end').textContent = endDateTime.toLocaleTimeString('zh-CN', { hour: '2-digit', minute: '2-digit' });
                                    document.getElementById('preview-avg-time').textContent = avgTime;
                                    
                                    timePreview.classList.remove('hidden');
                                }

                                form.addEventListener('submit', function(e) {
                                    if (!gradeIdInput.value || !eventIdInput.value || !genderInput.value || !avgTimeInput.value) {
                                        e.preventDefault();
                                        alert('请先选择比赛分组');
                                        return false;
                                    }
                                });

                                groupSelect.addEventListener('change', updatePreview);
                                dateInput.addEventListener('change', () => {
                                    const selectedOption = groupSelect.options[groupSelect.selectedIndex];
                                    if (selectedOption.value) {
                                        const heatsCount = parseInt(selectedOption.dataset.heatsCount);
                                        const avgTime = parseInt(selectedOption.dataset.avgTime);
                                        updateTimePreview(heatsCount, avgTime);
                                    }
                                });
                                timeInput.addEventListener('change', () => {
                                    const selectedOption = groupSelect.options[groupSelect.selectedIndex];
                                    if (selectedOption.value) {
                                        const heatsCount = parseInt(selectedOption.dataset.heatsCount);
                                        const avgTime = parseInt(selectedOption.dataset.avgTime);
                                        updateTimePreview(heatsCount, avgTime);
                                    }
                                });
                            }

                            document.addEventListener('DOMContentLoaded', initBulkScheduleForm);
                        </script>
                    @endif
                </div>
            </div>
        </div>
    </div>
</x-app-layout>
